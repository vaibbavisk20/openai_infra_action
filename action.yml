name: 'Azure Infrastructure for Open AI powered Chat'
description: 'This action helps deploy Infrastructure to Azure that helps achieve a chat-completion experience powered by Open AI'
branding:
  icon: 'play-circle'
  color: 'blue'
inputs:
  location:
    description: 'Location to deploy resources to'
    required: true
  openai-location:
    description: 'Location to deploy OpenAI resources to'
    required: true
  env-name:
    description: 'Name of environment where env values are set'
    required: true
  documentintelligence-location:
    decsription: 'Location to deploy Document Intelligence resources to'
    required: true
  bring-your-own-data:
    description: 'Boolean to indicate if you are bringing your own data'
    required: false
  data-path:
    description: 'Path to data to be used to train the OpenAI model'
    required: false

runs:
  using: 'composite'
  steps:
    - name: 'Checkout master'
      uses: actions/checkout@v3

    - name: 'az cli login'
      uses: azure/login@v2
      with:
        client-id: $env:AZURE_CLIENT_ID
        tenant-id: $env:AZURE_TENANT_ID 
        subscription-id: $env:AZURE_SUBSCRIPTION_ID 
        enable-AzPSSession: true
          
    - name: 'Install azd'
      uses: Azure/setup-azd@v0.1.0

    - name: 'Install Nodejs'
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Az powershell
      uses: azure/powershell@v2
      env:
        BRING_YOUR_OWN_DATA: ${{ inputs.bring-your-own-data }}
      with:
        inlineScript: |
          dir
          mkdir orig-ai-repo
          cd orig-ai-repo
          
          $env:additional_args
        
          # Parse the JSON from the environment variable
          $jsonObject = ConvertFrom-Json -InputObject $env:additional_args

          # Print the contents of the JSON
          $jsonObject

          foreach ($key in $jsonObject.PSObject.Properties.Name) {
            $value = $jsonObject.$key
            Write-Output "Key: $key, Value: $value"
            azd env set $key $value
          }
          
          Get-AzContext -ListAvailable
          azd env get-values


        azPSVersion: "latest"